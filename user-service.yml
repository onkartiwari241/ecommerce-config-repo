spring:
  application:
    name: user-service
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

server:
  port: 0

# --- Eureka configuration ---
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true

# --- Distributed tracing, Zipkin, and Actuator ---
management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


# --- Resilience4J Configuration for Circuit Breaker, Retry, and Rate Limiter ---
# Handles fault tolerance by automatically breaking the circuit on repeated failures,
# retrying transient errors, and limiting excessive calls to prevent overload.
resilience4j:
  circuitbreaker:
    instances:
      USER-SERVICE:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        waitDurationInOpenState: 10s
        automaticTransitionFromOpenToHalfOpenEnabled: true
        recordExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.ResourceAccessException
        ignoreExceptions:
          - com.jmd.user.user.service.exception.ResourceNotFoundException
          - com.jmd.user.user.service.exception.ResourceAlreadyExistsException

      ADDRESS-SERVICE:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
        waitDurationInOpenState: 10s
        automaticTransitionFromOpenToHalfOpenEnabled: true
        recordExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.ResourceAccessException
          - com.jmd.user.user.service.exception.AddressServiceUnavailableException
        ignoreExceptions:
          - com.jmd.user.user.service.exception.ResourceNotFoundException
          - com.jmd.user.user.service.exception.ResourceAlreadyExistsException


  retry:
    instances:
      USER-SERVICE:
        maxAttempts: 3
        waitDuration: 2s
        retryExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.ResourceAccessException
        ignoreExceptions:
          - com.jmd.user.user.service.exception.ResourceNotFoundException
          - com.jmd.user.user.service.exception.ResourceAlreadyExistsException

      ADDRESS-SERVICE:
        maxAttempts: 3
        waitDuration: 2s
        retryExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
          - org.springframework.web.client.ResourceAccessException
          - com.jmd.user.user.service.exception.AddressServiceUnavailableException
        ignoreExceptions:
          - com.jmd.user.user.service.exception.ResourceNotFoundException
          - com.jmd.user.user.service.exception.ResourceAlreadyExistsException

  ratelimiter:
    instances:
      USER-SERVICE:
        limitForPeriod: 5
        limitRefreshPeriod: 10s
        timeoutDuration: 1s

      ADDRESS-SERVICE:
        limitForPeriod: 5
        limitRefreshPeriod: 10s
        timeoutDuration: 1s

